Uniform Instruction Format Proposal
===================================

This is a proposal to have a 64-bit instruction that all shorter instructions
can be translated to, such that the internal representation used in a CPU can
be this 64-bit format.

The instruction format is designed for ease of decoding, rather than encoding
density.

Conventions
===========

Conventions used in this document:
- Bits are numbered starting from 0 at the LSB, so bit 3 is 1 in the integer 8.
- Bit ranges are inclusive on both ends, so 5:3 means bits 5, 4, and 3.

Operations work on variable-length vectors of sub-vectors, where each sub-vector
has a length *svlen*, and an element type *etype*. When the vectors are stored
in registers, all elements are packed so that there is no padding in-between
elements of the same vector. The number of bytes in a sub-vector, *svsz*, is the
product of *svlen* and the element size in bytes.

Register Fields
===============

+---------------------+-----------------+
| 7                   | 6:0             |
+=====================+=================+
| Float (1) / Int (0) | Register Number |
+---------------------+-----------------+

Predicate (pred)
================

+-------------------+---------------------------+
| 5                 | 4:0                       |
+===================+===========================+
| Matched Bit Value | Predicate Register (preg) |
+-------------------+---------------------------+

+----------+----------------+
| Encoding |                |
+==========+================+
| 000000   | *Unpredicated* |
+----------+----------------+
| 100000   | *Reserved*     |
+----------+----------------+
| 000001   | ``!x1``        |
| \.\.\.   | \.\.\.         |
| 011111   | ``!x31``       |
+----------+----------------+
| 100001   | x1             |
| \.\.\.   | \.\.\.         |
| 111111   | x31            |
+----------+----------------+

Sub-Vector Length (svlen) Field Encoding
========================================

+----------------+-------+
| svlen Encoding | Value |
+================+=======+
| 00             | 4     |
+----------------+-------+
| 01             | 1     |
+----------------+-------+
| 10             | 2     |
+----------------+-------+
| 11             | 3     |
+----------------+-------+

Sub-Vector Element Type (svet) Field Encoding
=============================================

Encoding chosen for ease of decoding

+-----------------+----------------------------------+
| svet Encoding   | Value                            |
+=================+==================================+
| 0000            | u8                               |
+-----------------+----------------------------------+
| 0001            | i8                               |
+-----------------+----------------------------------+
| 0010            | u16                              |
+-----------------+----------------------------------+
| 0011            | i16                              |
+-----------------+----------------------------------+
| 0100            | u32                              |
+-----------------+----------------------------------+
| 0101            | i32                              |
+-----------------+----------------------------------+
| 0110            | u64                              |
+-----------------+----------------------------------+
| 0111            | i64                              |
+-----------------+----------------------------------+
| 1000            | u128 (only on SV128)             |
+-----------------+----------------------------------+
| 1001            | i128 (only on SV128)             |
+-----------------+----------------------------------+
| 1010            | f16                              |
+-----------------+----------------------------------+
| 1011            | *Reserved*                       |
+-----------------+----------------------------------+
| 1100            | f32                              |
+-----------------+----------------------------------+
| 1101            | *Reserved*                       |
+-----------------+----------------------------------+
| 1110            | f64                              |
+-----------------+----------------------------------+
| 1111            | f128 (only with Q extension)     |
+-----------------+----------------------------------+

vs#/vd Fields' Encoding
=======================

+--------+----------+----------------------------------------------------------+
| vs#/vd | Mnemonic | Meaning                                                  |
+========+==========+==========================================================+
| 0      | S        | the rs#/rd field specifies a scalar (single sub-vector)  |
+--------+----------+----------------------------------------------------------+
| 1      | V        | the rs#/rd field specifies a vector                      |
+--------+----------+----------------------------------------------------------+

If a vs#/vd field is not present, it is as if it was present with a value that
is the bitwise-or of all present vs#/vd fields.

Instruction Format
==================

All format names are prefixed with UIF64 (Uniform Instruction Format 64-bit).

All reserved values must be 0.

TODO: add immediates to UIF64I and add missing formats

Bits 49:46 are chosen so the vectorizing unit just has to check those 4 bits to
know if vectorizing is needed and which fields to increment.

+----------+---------+----+----+----+----+----+----+----+----+----+----+----+----+----+------------+------------+------------+------------+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+------------+---------+
| Format   | 63      | 62 | 61 | 60 | 59 | 58 | 57 | 56 | 55 | 54 | 53 | 52 | 51 | 50 | 49         | 48         | 47         | 46         | 45 | 44 | 43 | 42 | 41 | 40 | 39 | 38 | 37 | 36 | 35 | 34 | 33 | 32 | 31 | 30 | 29 | 28 | 27 | 26 | 25 | 24 | 23 | 22 | 21 | 20 | 19 | 18 | 17 | 16 | 15 | 14 | 13 | 12 | 11 | 10 | 9  | 8  | 7          | 6:0     |
+==========+=========+====+====+====+====+====+====+====+====+====+====+====+====+====+============+============+============+============+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+====+============+=========+
| UIF64STR | imm[11:9]         | Opcode                 | svet              | svlen   | *Reserved* | vs2        | vs1        | *Reserved* | pred                        | rstride                               | rs2                                   | rs1                                   | imm[7:0]                              | imm[8]     | 0111111 |
+----------+                   +                        +                   +         +            +------------+            +------------+                             +                                       +----+----+----+----+----+----+----+----+                                       +----+----+----+----+----+----+----+----+            +         +
| UIF64LDR |                   |                        |                   |         |            | *Reserved* |            | vd         |                             |                                       | imm[7:0]                              |                                       | rd                                    |            |         |
+----------+                   +                        +                   +         +            +------------+            +------------+                             +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+                                       +----+----+----+----+----+----+----+----+            +         +
| UIF64STI |                   |                        |                   |         |            | vs2        |            | *Reserved* |                             | immstride                             | rs2                                   |                                       | imm[7:0]                              |            |         |
+----------+                   +                        +                   +         +            +------------+            +------------+                             +                                       +----+----+----+----+----+----+----+----+                                       +----+----+----+----+----+----+----+----+            +         +
| UIF64LDI |                   |                        |                   |         |            | *Reserved* |            | vd         |                             |                                       | imm[7:0]                              |                                       | rd                                    |            |         |
+----------+---------+----+----+----+----+----+----+----+                   +         +------------+------------+            +            +                             +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+                                       +                                       +------------+         +
| UIF64R4  | Opcode                                     |                   |         | vs3        | vs2        |            |            |                             | rs3                                   | rs2                                   |                                       |                                       | *Reserved* |         |
+----------+                                            +                   +         +------------+            +            +            +                             +----+----+----+----+----+----+----+----+                                       +                                       +                                       +            +         +
| UIF64R   |                                            |                   |         | *Reserved* |            |            |            |                             | funct8                                |                                       |                                       |                                       |            |         |
+----------+---------+----+----+----+----+----+----+----+                   +         +            +------------+            +            +                             +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+                                       +                                       +            +         +
| UIF64I   | imm[16] | Opcode                           |                   |         |            | *Reserved* |            |            |                             | imm[15:12]        | imm[11:8]         | imm[7:0]                              |                                       |                                       |            |         |
+----------+---------+                                  +                   +         +            +            +------------+            +                             +                   +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+                                       +            +         +
| UIF64U   | imm[36] |                                  |                   |         |            |            | *Reserved* |            |                             |                   | imm[35:32]        | imm[31:24]                            | imm[23:16]                            |                                       |            |         |
+----------+---------+----+----+----+----+----+----+----+                   +         +            +            +            +------------+----+----+----+----+----+----+                   +----+----+----+----+----+----+----+----+----+----+----+----+                                       +                                       +            +         +
| UIF64LI  | imm[31:30]   | Opcode                      |                   |         |            |            |            | *Reserved* | imm[29:24]                  |                   | imm[11:8]         | imm[7:0]                              |                                       |                                       |            |         |
+----------+---------+----+----+----+----+----+----+----+                   +         +            +            +            +            +----+----+----+----+----+----+                   +                   +----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+            +         +
| UIF64B   | imm[16] | Opcode                           |                   |         |            |            |            |            | *Reserved*                  |                   |                   | rs2                                   | rs1                                   | imm[7:0]                              |            |         |
+----------+---------+----+----+----+----+----+----+----+----+----+----+----+----+----+------------+------------+------------+------------+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+------------+---------+


Opcode Table
============

+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| Instruction(s)                 | Format   | Opcode[7] | Opcode[6] | Opcode[5] | Opcode[4:0] | funct8   |
+================================+==========+===========+===========+===========+=============+==========+
| Load/Load-Strided              | UIF64LDI | --        | --        | --        | 00000       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| Load-Strided                   | UIF64LDR | --        | --        | --        | 00001       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (custom-0)          | --       | --        | --        | --        | 00010       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FENCE                          | UIF64I   | --        | 0         | 0         | 00011       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FENCE.I                        | UIF64I   | --        | 0         | 1         | 00011       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | UIF64I   | --        | 1         | X         | 00011       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| ADDI/MV/FMV/FMV.\*.X/FMV.X.\*  | UIF64I   | --        | 0         | 0         | 00100       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SLLI                           | UIF64I   | --        | 0         | 1         | 00100       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SLTI/SLTIU                     | UIF64I   | --        | 1         | 0         | 00100       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | --       | --        | 1         | 1         | 00100       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AUIPC/AUIPC+ADDI               | UIF64LI  | --        | --        | 0         | 00101       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| CALL (rd=x1)                   | UIF64LI  | --        | --        | 1         | 00101       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| XORI                           | UIF64I   | --        | 0         | 0         | 00110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SRLI/SRAI                      | UIF64I   | --        | 0         | 1         | 00110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| ORI                            | UIF64I   | --        | 1         | 0         | 00110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| ANDI                           | UIF64I   | --        | 1         | 1         | 00110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | --       | --        | --        | --        | 00111       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| Store/Store-Strided            | UIF64STI | --        | --        | --        | 01000       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| Store-Strided                  | UIF64STR | --        | --        | --        | 01001       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (custom-1)          | --       | --        | --        | --        | 01010       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOADD                         | UIF64R   | 0         | acquire   | release   | 01011       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOSWAP                        | UIF64R   | 0         | acquire   | release   | 01011       | 00000001 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| LR (rs2=x0)                    | UIF64R   | 0         | acquire   | release   | 01011       | 00000010 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SC                             | UIF64R   | 0         | acquire   | release   | 01011       | 00000011 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOXOR                         | UIF64R   | 0         | acquire   | release   | 01011       | 00000100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOOR                          | UIF64R   | 0         | acquire   | release   | 01011       | 00001000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOAND                         | UIF64R   | 0         | acquire   | release   | 01011       | 00001100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOMIN/AMOMINU                 | UIF64R   | 0         | acquire   | release   | 01011       | 00010000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AMOMAX/AMOMAXU                 | UIF64R   | 0         | acquire   | release   | 01011       | 00010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| ADD/FADD                       | UIF64R   | 0         | 0         | 0         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SUB/FSUB                       | UIF64R   | 0         | 0         | 0         | 01100       | 00000100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SLL                            | UIF64R   | 0         | 0         | 1         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | UIF64R   | 0         | 1         | X         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| XOR                            | UIF64R   | 1         | 0         | 0         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SRL                            | UIF64R   | 1         | 0         | 1         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| SRA                            | UIF64R   | 1         | 0         | 1         | 01100       | 00000100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| OR                             | UIF64R   | 1         | 1         | 0         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| AND                            | UIF64R   | 1         | 1         | 1         | 01100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| MUL/FMUL                       | UIF64R   | 0         | 0         | 0         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| MULH                           | UIF64R   | 0         | 0         | 1         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| MULHSU                         | UIF64R   | 0         | 1         | 0         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| MULHU                          | UIF64R   | 0         | 1         | 1         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| DIV/DIVU/FDIV                  | UIF64R   | 1         | 0         | 0         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | UIF64R   | 1         | 0         | 1         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| REM/REMU                       | UIF64R   | 1         | 1         | 0         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | UIF64R   | 1         | 1         | 1         | 01100       | 00100000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| LUI/LUI+ADDI                   | UIF64LI  | --        | --        | 0         | 01101       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| TAIL (rd=x6)                   | UIF64LI  | --        | --        | 1         | 01101       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | --       | --        | --        | --        | 01110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | --       | --        | --        | --        | 01111       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| MADD/FMADD                     | UIF64R4  | rm                                | 10000       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| MSUB/FMSUB                     | UIF64R4  | rm                                | 10001       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| NMSUB/FNMSUB                   | UIF64R4  | rm                                | 10010       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| NMADD/FNMADD                   | UIF64R4  | rm                                | 10011       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FADD                           | UIF64R   | rm                                | 10100       | 00000000 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FSUB                           | UIF64R   | rm                                | 10100       | 00000001 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FMUL                           | UIF64R   | rm                                | 10100       | 00000010 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FDIV                           | UIF64R   | rm                                | 10100       | 00000011 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FSGNJ                          | UIF64R   | 0         | 0         | 0         | 10100       | 00000100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FSGNJN                         | UIF64R   | 0         | 0         | 1         | 10100       | 00000100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FSGNJX                         | UIF64R   | 0         | 1         | 0         | 10100       | 00000100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FMIN                           | UIF64R   | 0         | 0         | 0         | 10100       | 00000101 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FMAX                           | UIF64R   | 0         | 0         | 1         | 10100       | 00000101 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FCVT/CVT (rs2=svet             | UIF64R   | rm                                | 10100       | 00001000 |
| for source)                    |          |                                   |             |          |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FSQRT (rs2=x0)                 | UIF64R   | rm                                | 10100       | 00001011 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FRSQRT (rs2=x0)                | UIF64R   | rm                                | 10100       | 10001011 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FLE/SLE/SLEU                   | UIF64R   | 0         | 0         | 0         | 10100       | 00010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FNLE (different than FGT)      | UIF64R   | 0         | 0         | 0         | 10100       | 10010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FLT/SLT/SLTU                   | UIF64R   | 0         | 0         | 1         | 10100       | 00010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FNLT (different than FGE)      | UIF64R   | 0         | 0         | 1         | 10100       | 10010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FEQ/SEQ                        | UIF64R   | 0         | 1         | 0         | 10100       | 00010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FNE/SNE                        | UIF64R   | 0         | 1         | 0         | 10100       | 10010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FIXME: finish FPU ops          | UIF64R   | 0         | 1         | 0         | 10100       | 00010100 |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (standard)          | --       | --        | --        | --        | 10101       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (custom-2)          | --       | --        | --        | --        | 10110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | --       | --        | --        | --        | 10111       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FIXME: BRANCH                  | UIF64B   | --        | X         | X         | 11000       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FIXME: JALR                    | UIF64I   | --        | X         | X         | 11001       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (standard)          | --       | --        | --        | --        | 11010       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FIXME: JAL                     | UIF64LI  | --        | --        | X         | 11011       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| FIXME: SYSTEM                  | --       | --        | --        | --        | 11100       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (standard)          | --       | --        | --        | --        | 11101       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved* (custom-3)          | --       | --        | --        | --        | 11110       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
| *Reserved*                     | --       | --        | --        | --        | 11111       | --       |
+--------------------------------+----------+-----------+-----------+-----------+-------------+----------+
